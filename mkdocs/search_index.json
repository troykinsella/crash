{
    "docs": [
        {
            "location": "/", 
            "text": "Crash\n\n\nCrash is a command-line tool for executing test plans and reporting results, written in Go.\nIt works on Darwin, Linux, and Windows systems, with 64-bit architecture.\n\n\n\n\nInstallation\n\n\nBinary Distribution\n\n\nCrash is distributed as a single OS-/Architecture-specific executable binary.\n\n\nHead over to \nReleases\n and download the appropriate \nbinary for your system. Then, move the binary to a convenient location:\n\n\n$ sudo mv ~/Downloads/crash_[OS]_[Arch] /usr/local/bin/crash\n$ sudo chmod +x /usr/local/bin/crash\n\n\n\n\nBuilding from Source\n\n\nSet up a \nGo workspace\n.\n\n\nGet the sources:\n\n\n$ go get github.com/troykinsella/crash\n\n\n\n\nInstall dependencies:\n\n\n$ go get -d -v ./...\n\n\n\n\nBuild the binary:\n\n\n$ go build -o crash -v github.com/troykinsella/crash/cmd\n\n\n\n\nGetting Started", 
            "title": "Home"
        }, 
        {
            "location": "/#crash", 
            "text": "Crash is a command-line tool for executing test plans and reporting results, written in Go.\nIt works on Darwin, Linux, and Windows systems, with 64-bit architecture.", 
            "title": "Crash"
        }, 
        {
            "location": "/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/#binary-distribution", 
            "text": "Crash is distributed as a single OS-/Architecture-specific executable binary.  Head over to  Releases  and download the appropriate \nbinary for your system. Then, move the binary to a convenient location:  $ sudo mv ~/Downloads/crash_[OS]_[Arch] /usr/local/bin/crash\n$ sudo chmod +x /usr/local/bin/crash", 
            "title": "Binary Distribution"
        }, 
        {
            "location": "/#building-from-source", 
            "text": "Set up a  Go workspace .  Get the sources:  $ go get github.com/troykinsella/crash  Install dependencies:  $ go get -d -v ./...  Build the binary:  $ go build -o crash -v github.com/troykinsella/crash/cmd", 
            "title": "Building from Source"
        }, 
        {
            "location": "/#getting-started", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/crashfile_reference/", 
            "text": "Introduction\n\n\nCrashfiles tell \ncrash\n what to do.\n\n\n\n\nThe Crashfile\n\n\nPlans\n\n\nDefined at the root of the test plan document, \nplans\n is a list of plan objects, \nand every test plan document must define it. Plans are executed in the order defined, \nserially. Must have at least one entry.\n\n\nPlan\n\n\nA plan object defines a name and the list of steps that \ncrash\n will execute in a test run. \n\n\n\n\n\n\n\n\nProperties\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nplan\n\n\nyes\n\n\nThe name of the plan which appears in test output.\n\n\n\n\n\n\nsteps\n\n\nyes\n\n\nA list of steps to execute. This step list is really an implicit \nserial\n step, which executes the steps sequentially, serially.\n\n\n\n\n\n\n\n\nExample:\n\n\n---\nplans:\n- plan: Plan A\n  steps:\n  # ...\n\n\n\n\nStep\n\n\nA step can be one of the types listed in the \nPlan Steps\n section.\nAny kind of step object may have the following properties:\n\n\n\n\n\n\n\n\nProperties\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncheck\n\n\nno\n\n\nA list of assertions to perform after the execution of the step is complete.\n\n\n\n\n\n\n\n\nVars\n\n\nDefined at the root of the test plan document, \nvars\n defines constants that are available\nat execution time.\n\n\n---\nvars:\n  key: value\n  foo: bar\n\n\n\n\nPlan Steps\n\n\nParallel\n\n\nExecute a list of steps in parallel. The parallel step, itself, completes when all of the nested steps\nhave completed.\n\n\nExample:\n\n\n# ...\n- parallel:\n  - # step 1 ...\n  - # step 2 ...\n\n\n\n\nRun\n\n\nRun an action. Available actions can be browsed in the \"Action Reference\" from the main menu.\n\n\nActions are represented by an object having a \nrun\n property that has an object value. The object\nvalue has the following properties:\n\n\n\n\n\n\n\n\nProperties\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nyes\n\n\nThe name of the action which appears in test output.\n\n\n\n\n\n\ntype\n\n\nyes\n\n\nDictates which action is selected for execution.\n\n\n\n\n\n\nparams\n\n\nyes\n\n\nAn object defining action-specific key-value pairs that are passed into the action.\n\n\n\n\n\n\n\n\nExample:\n\n\n# ...\n- run:\n    name: Home page sample\n    type: http\n    params:\n      url: http://fooland.org\n\n\n\n\nSerial\n\n\nExecute a list of steps one after the other. The serial step, itself, completes when the last nested step completes.\n\n\nExample:\n\n\n# ...\n- serial:\n  - # step 1 ...\n  - # step 2 ...\n\n\n\n\nExample\n\n\nThis example intends to show all basic \ncrash\n features.\n\n\n---\nvars:\n  base_url: http://example.com\n\nplans:\n- plan: Sooper Site\n  steps:\n  - parallel:\n    - run:\n        name: home page\n        type: http\n        params:\n          url: ${base_url}\n      check:\n      - status-code in 200, 299 // http status ${status-code} is 4xx\n      - body contains '\n!doctype html\n' // has doctype declaration\n      - headers.content-type eq 'text/html'\n    - run:\n        name: about page\n        type: http\n        params:\n          url: ${base_url}/about.html\n      check:\n      - status-code eq 200\n      - body contains 'Copyright'", 
            "title": "Crashfile Reference"
        }, 
        {
            "location": "/crashfile_reference/#introduction", 
            "text": "Crashfiles tell  crash  what to do.", 
            "title": "Introduction"
        }, 
        {
            "location": "/crashfile_reference/#the-crashfile", 
            "text": "", 
            "title": "The Crashfile"
        }, 
        {
            "location": "/crashfile_reference/#plans", 
            "text": "Defined at the root of the test plan document,  plans  is a list of plan objects, \nand every test plan document must define it. Plans are executed in the order defined, \nserially. Must have at least one entry.", 
            "title": "Plans"
        }, 
        {
            "location": "/crashfile_reference/#plan", 
            "text": "A plan object defines a name and the list of steps that  crash  will execute in a test run.      Properties  Required  Description      plan  yes  The name of the plan which appears in test output.    steps  yes  A list of steps to execute. This step list is really an implicit  serial  step, which executes the steps sequentially, serially.     Example:  ---\nplans:\n- plan: Plan A\n  steps:\n  # ...", 
            "title": "Plan"
        }, 
        {
            "location": "/crashfile_reference/#step", 
            "text": "A step can be one of the types listed in the  Plan Steps  section.\nAny kind of step object may have the following properties:     Properties  Required  Description      check  no  A list of assertions to perform after the execution of the step is complete.", 
            "title": "Step"
        }, 
        {
            "location": "/crashfile_reference/#vars", 
            "text": "Defined at the root of the test plan document,  vars  defines constants that are available\nat execution time.  ---\nvars:\n  key: value\n  foo: bar", 
            "title": "Vars"
        }, 
        {
            "location": "/crashfile_reference/#plan-steps", 
            "text": "", 
            "title": "Plan Steps"
        }, 
        {
            "location": "/crashfile_reference/#parallel", 
            "text": "Execute a list of steps in parallel. The parallel step, itself, completes when all of the nested steps\nhave completed.  Example:  # ...\n- parallel:\n  - # step 1 ...\n  - # step 2 ...", 
            "title": "Parallel"
        }, 
        {
            "location": "/crashfile_reference/#run", 
            "text": "Run an action. Available actions can be browsed in the \"Action Reference\" from the main menu.  Actions are represented by an object having a  run  property that has an object value. The object\nvalue has the following properties:     Properties  Required  Description      name  yes  The name of the action which appears in test output.    type  yes  Dictates which action is selected for execution.    params  yes  An object defining action-specific key-value pairs that are passed into the action.     Example:  # ...\n- run:\n    name: Home page sample\n    type: http\n    params:\n      url: http://fooland.org", 
            "title": "Run"
        }, 
        {
            "location": "/crashfile_reference/#serial", 
            "text": "Execute a list of steps one after the other. The serial step, itself, completes when the last nested step completes.  Example:  # ...\n- serial:\n  - # step 1 ...\n  - # step 2 ...", 
            "title": "Serial"
        }, 
        {
            "location": "/crashfile_reference/#example", 
            "text": "This example intends to show all basic  crash  features.  ---\nvars:\n  base_url: http://example.com\n\nplans:\n- plan: Sooper Site\n  steps:\n  - parallel:\n    - run:\n        name: home page\n        type: http\n        params:\n          url: ${base_url}\n      check:\n      - status-code in 200, 299 // http status ${status-code} is 4xx\n      - body contains ' !doctype html ' // has doctype declaration\n      - headers.content-type eq 'text/html'\n    - run:\n        name: about page\n        type: http\n        params:\n          url: ${base_url}/about.html\n      check:\n      - status-code eq 200\n      - body contains 'Copyright'", 
            "title": "Example"
        }, 
        {
            "location": "/commands/", 
            "text": "help\n\n\nNAME:\n   crash - test utility\n\nUSAGE:\n   crash [global options] command [command options] [arguments...]\n\nVERSION:\n   0.0.4\n\nCOMMANDS:\n     test, t  Execute a test plan\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --help, -h     show help\n   --version, -v  print the version\n\n\n\n\ntest\n\n\nNAME:\n   crash test - Execute a test plan\n\nUSAGE:\n   crash test [command options] [arguments...]\n\nOPTIONS:\n   -j                 Format logging output as JSON\n   --nc               No color. Disable output colorization.\n   -q                 Quiet mode; suppress logging\n   -s FILE|KEY=VALUE  Set variable(s) FILE|KEY=VALUE\n   -v                 Verbose logging; Use -vv or -vvv to increase verbosity\n   -f FILE            Input test yaml FILE; Defaults to searching for Crashfile.y[a]ml in the current directory", 
            "title": "Commands"
        }, 
        {
            "location": "/commands/#help", 
            "text": "NAME:\n   crash - test utility\n\nUSAGE:\n   crash [global options] command [command options] [arguments...]\n\nVERSION:\n   0.0.4\n\nCOMMANDS:\n     test, t  Execute a test plan\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --help, -h     show help\n   --version, -v  print the version", 
            "title": "help"
        }, 
        {
            "location": "/commands/#test", 
            "text": "NAME:\n   crash test - Execute a test plan\n\nUSAGE:\n   crash test [command options] [arguments...]\n\nOPTIONS:\n   -j                 Format logging output as JSON\n   --nc               No color. Disable output colorization.\n   -q                 Quiet mode; suppress logging\n   -s FILE|KEY=VALUE  Set variable(s) FILE|KEY=VALUE\n   -v                 Verbose logging; Use -vv or -vvv to increase verbosity\n   -f FILE            Input test yaml FILE; Defaults to searching for Crashfile.y[a]ml in the current directory", 
            "title": "test"
        }, 
        {
            "location": "/actions/http/", 
            "text": "http\n\n\nMake a request to an HTTP or HTTPS server.\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nRequired\n\n\nDefault\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmethod\n\n\nno\n\n\n\"GET\"\n\n\nThe HTTP request method to use.\n\n\n\n\n\n\nurl\n\n\nyes\n\n\n\n\nThe URL against which a request will be made. Must have an \"http://\" or \"https://\" scheme.\n\n\n\n\n\n\n\n\nOutputs\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbody\n\n\nThe response body string.\n\n\n\n\n\n\nheaders\n\n\nA map of HTTP headers returned in the response.\n\n\n\n\n\n\nstatus-code\n\n\nThe HTTP response status code.\n\n\n\n\n\n\nraw-body\n\n\nThe response body bytes.\n\n\n\n\n\n\n\n\nExamples\n\n\n# Crashfile\n---\nplans:\n- plan: Sooper Site\n  steps:\n  - run:\n      name: Home Page\n      type: http\n      params:\n        method: get\n        url: http://example.com\n    check:\n    - status-code in 200, 299 // http status ${status-code} is 2xx\n    - body contains '\n!doctype html\n' // has html5 doctype declaration\n    - headers.content-type eq 'text/html'\n\n\n\n\nStandard output (-vvv):\n\n\n[#] {0.000s} Sooper Site\n[-] {0.000s} serial...\n[!] {0.000s} Home Page\n[I] {0.000s} GET http://example.com\n[I] {0.024s} GET http://example.com -\n 200\n[!] {0.025s} (24.472022ms) Home Page\n[\u2713] http status 200 is 2xx\n[\u2713] has html5 doctype declaration\n[\u2713] headers.content-type eq 'text/html'\n[-] {0.025s} (24.646099ms) \n[#] {0.025s} (24.67152ms) Sooper Site\n\n\n\n\nJSON output (-vvv):\n\n\n{\nmessage\n:\nSooper Site\n,\ntimestamp\n:\n2016-10-11T19:54:46.777297172Z\n,\ntype\n:\nplan\n}\n{\nmessage\n:\nserial...\n,\ntimestamp\n:\n2016-10-11T19:54:46.777371637Z\n,\ntype\n:\nserial\n}\n{\nmessage\n:\nHome Page\n,\nresult\n:null,\ntimestamp\n:\n2016-10-11T19:54:46.777390497Z\n,\ntype\n:\naction\n}\n{\nmessage\n:\nGET http://example.com\n,\ntimestamp\n:\n2016-10-11T19:54:46.777448053Z\n,\ntype\n:\ninfo\n}\n{\nmessage\n:\nGET http://example.com -\\u003e 200\n,\ntimestamp\n:\n2016-10-11T19:54:46.800864252Z\n,\ntype\n:\ninfo\n}\n{\nduration\n:23883015,\nmessage\n:\nHome Page\n,\nresult\n:[{\nbody\n:\n\\u003c!doctype html\\u003e\\n\\u003chtml\\u003e\\n\\u003chead\\u003e\\n    \\u003ctitle\\u003eExample Domain\\u003c/title\\u003e\\n\\n    \\u003cmeta charset=\\\nutf-8\\\n /\\u003e\\n    \\u003cmeta http-equiv=\\\nContent-type\\\n content=\\\ntext/html; charset=utf-8\\\n /\\u003e\\n    \\u003cmeta name=\\\nviewport\\\n content=\\\nwidth=device-width, initial-scale=1\\\n /\\u003e\\n    \\u003cstyle type=\\\ntext/css\\\n\\u003e\\n    body {\\n        background-color: #f0f0f2;\\n        margin: 0;\\n        padding: 0;\\n        font-family: \\\nOpen Sans\\\n, \\\nHelvetica Neue\\\n, Helvetica, Arial, sans-serif;\\n        \\n    }\\n    div {\\n        width: 600px;\\n        margin: 5em auto;\\n        padding: 50px;\\n        background-color: #fff;\\n        border-radius: 1em;\\n    }\\n    a:link, a:visited {\\n        color: #38488f;\\n        text-decoration: none;\\n    }\\n    @media (max-width: 700px) {\\n        body {\\n            background-color: #fff;\\n        }\\n        div {\\n            width: auto;\\n            margin: 0 auto;\\n            border-radius: 0;\\n            padding: 1em;\\n        }\\n    }\\n    \\u003c/style\\u003e    \\n\\u003c/head\\u003e\\n\\n\\u003cbody\\u003e\\n\\u003cdiv\\u003e\\n    \\u003ch1\\u003eExample Domain\\u003c/h1\\u003e\\n    \\u003cp\\u003eThis domain is established to be used for illustrative examples in documents. You may use this\\n    domain in examples without prior coordination or asking for permission.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003ca href=\\\nhttp://www.iana.org/domains/example\\\n\\u003eMore information...\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\\u003c/body\\u003e\\n\\u003c/html\\u003e\\n\n,\nheaders\n:{\nAccept-Ranges\n:[\nbytes\n],\nCache-Control\n:[\nmax-age=604800\n],\nContent-Type\n:[\ntext/html\n],\nDate\n:[\nTue, 11 Oct 2016 19:54:46 GMT\n],\nEtag\n:[\n\\\n359670651+gzip\\\n],\nExpires\n:[\nTue, 18 Oct 2016 19:54:46 GMT\n],\nLast-Modified\n:[\nFri, 09 Aug 2013 23:54:35 GMT\n],\nServer\n:[\nECS (mdw/1275)\n],\nVary\n:[\nAccept-Encoding\n],\nX-Cache\n:[\nHIT\n],\nX-Ec-Custom-Error\n:[\n1\n]},\nraw-body\n:\nPCFkb2N0eXBlIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDx0aXRsZT5FeGFtcGxlIERvbWFpbjwvdGl0bGU+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIgLz4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSIgLz4KICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICBib2R5IHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYyOwogICAgICAgIG1hcmdpbjogMDsKICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgIGZvbnQtZmFtaWx5OiAiT3BlbiBTYW5zIiwgIkhlbHZldGljYSBOZXVlIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAgICAgICAKICAgIH0KICAgIGRpdiB7CiAgICAgICAgd2lkdGg6IDYwMHB4OwogICAgICAgIG1hcmdpbjogNWVtIGF1dG87CiAgICAgICAgcGFkZGluZzogNTBweDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDFlbTsKICAgIH0KICAgIGE6bGluaywgYTp2aXNpdGVkIHsKICAgICAgICBjb2xvcjogIzM4NDg4ZjsKICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICB9CiAgICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHsKICAgICAgICBib2R5IHsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgICAgICB9CiAgICAgICAgZGl2IHsKICAgICAgICAgICAgd2lkdGg6IGF1dG87CiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwOwogICAgICAgICAgICBwYWRkaW5nOiAxZW07CiAgICAgICAgfQogICAgfQogICAgPC9zdHlsZT4gICAgCjwvaGVhZD4KCjxib2R5Pgo8ZGl2PgogICAgPGgxPkV4YW1wbGUgRG9tYWluPC9oMT4KICAgIDxwPlRoaXMgZG9tYWluIGlzIGVzdGFibGlzaGVkIHRvIGJlIHVzZWQgZm9yIGlsbHVzdHJhdGl2ZSBleGFtcGxlcyBpbiBkb2N1bWVudHMuIFlvdSBtYXkgdXNlIHRoaXMKICAgIGRvbWFpbiBpbiBleGFtcGxlcyB3aXRob3V0IHByaW9yIGNvb3JkaW5hdGlvbiBvciBhc2tpbmcgZm9yIHBlcm1pc3Npb24uPC9wPgogICAgPHA+PGEgaHJlZj0iaHR0cDovL3d3dy5pYW5hLm9yZy9kb21haW5zL2V4YW1wbGUiPk1vcmUgaW5mb3JtYXRpb24uLi48L2E+PC9wPgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+Cg==\n,\nstatus-code\n:200}],\ntimestamp\n:\n2016-10-11T19:54:46.801171324Z\n,\ntype\n:\naction\n}\n{\nmessage\n:\nhttp status 200 is 2xx\n,\npass\n:true,\ntimestamp\n:\n2016-10-11T19:54:46.801350514Z\n,\ntype\n:\ncheck\n}\n{\nmessage\n:\nhas html5 doctype declaration\n,\npass\n:true,\ntimestamp\n:\n2016-10-11T19:54:46.801379281Z\n,\ntype\n:\ncheck\n}\n{\nmessage\n:\nheaders.content-type eq 'text/html'\n,\npass\n:true,\ntimestamp\n:\n2016-10-11T19:54:46.80140328Z\n,\ntype\n:\ncheck\n}\n{\nduration\n:24145495,\nmessage\n:\n,\ntimestamp\n:\n2016-10-11T19:54:46.801429086Z\n,\ntype\n:\nserial\n}\n{\nduration\n:24171189,\nmessage\n:\nSooper Site\n,\ntimestamp\n:\n2016-10-11T19:54:46.801461006Z\n,\ntype\n:\nplan\n}", 
            "title": "http"
        }, 
        {
            "location": "/actions/http/#http", 
            "text": "Make a request to an HTTP or HTTPS server.", 
            "title": "http"
        }, 
        {
            "location": "/actions/http/#parameters", 
            "text": "Name  Required  Default  Description      method  no  \"GET\"  The HTTP request method to use.    url  yes   The URL against which a request will be made. Must have an \"http://\" or \"https://\" scheme.", 
            "title": "Parameters"
        }, 
        {
            "location": "/actions/http/#outputs", 
            "text": "Name  Description      body  The response body string.    headers  A map of HTTP headers returned in the response.    status-code  The HTTP response status code.    raw-body  The response body bytes.", 
            "title": "Outputs"
        }, 
        {
            "location": "/actions/http/#examples", 
            "text": "# Crashfile\n---\nplans:\n- plan: Sooper Site\n  steps:\n  - run:\n      name: Home Page\n      type: http\n      params:\n        method: get\n        url: http://example.com\n    check:\n    - status-code in 200, 299 // http status ${status-code} is 2xx\n    - body contains ' !doctype html ' // has html5 doctype declaration\n    - headers.content-type eq 'text/html'  Standard output (-vvv):  [#] {0.000s} Sooper Site\n[-] {0.000s} serial...\n[!] {0.000s} Home Page\n[I] {0.000s} GET http://example.com\n[I] {0.024s} GET http://example.com -  200\n[!] {0.025s} (24.472022ms) Home Page\n[\u2713] http status 200 is 2xx\n[\u2713] has html5 doctype declaration\n[\u2713] headers.content-type eq 'text/html'\n[-] {0.025s} (24.646099ms) \n[#] {0.025s} (24.67152ms) Sooper Site  JSON output (-vvv):  { message : Sooper Site , timestamp : 2016-10-11T19:54:46.777297172Z , type : plan }\n{ message : serial... , timestamp : 2016-10-11T19:54:46.777371637Z , type : serial }\n{ message : Home Page , result :null, timestamp : 2016-10-11T19:54:46.777390497Z , type : action }\n{ message : GET http://example.com , timestamp : 2016-10-11T19:54:46.777448053Z , type : info }\n{ message : GET http://example.com -\\u003e 200 , timestamp : 2016-10-11T19:54:46.800864252Z , type : info }\n{ duration :23883015, message : Home Page , result :[{ body : \\u003c!doctype html\\u003e\\n\\u003chtml\\u003e\\n\\u003chead\\u003e\\n    \\u003ctitle\\u003eExample Domain\\u003c/title\\u003e\\n\\n    \\u003cmeta charset=\\ utf-8\\  /\\u003e\\n    \\u003cmeta http-equiv=\\ Content-type\\  content=\\ text/html; charset=utf-8\\  /\\u003e\\n    \\u003cmeta name=\\ viewport\\  content=\\ width=device-width, initial-scale=1\\  /\\u003e\\n    \\u003cstyle type=\\ text/css\\ \\u003e\\n    body {\\n        background-color: #f0f0f2;\\n        margin: 0;\\n        padding: 0;\\n        font-family: \\ Open Sans\\ , \\ Helvetica Neue\\ , Helvetica, Arial, sans-serif;\\n        \\n    }\\n    div {\\n        width: 600px;\\n        margin: 5em auto;\\n        padding: 50px;\\n        background-color: #fff;\\n        border-radius: 1em;\\n    }\\n    a:link, a:visited {\\n        color: #38488f;\\n        text-decoration: none;\\n    }\\n    @media (max-width: 700px) {\\n        body {\\n            background-color: #fff;\\n        }\\n        div {\\n            width: auto;\\n            margin: 0 auto;\\n            border-radius: 0;\\n            padding: 1em;\\n        }\\n    }\\n    \\u003c/style\\u003e    \\n\\u003c/head\\u003e\\n\\n\\u003cbody\\u003e\\n\\u003cdiv\\u003e\\n    \\u003ch1\\u003eExample Domain\\u003c/h1\\u003e\\n    \\u003cp\\u003eThis domain is established to be used for illustrative examples in documents. You may use this\\n    domain in examples without prior coordination or asking for permission.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003ca href=\\ http://www.iana.org/domains/example\\ \\u003eMore information...\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\\u003c/body\\u003e\\n\\u003c/html\\u003e\\n , headers :{ Accept-Ranges :[ bytes ], Cache-Control :[ max-age=604800 ], Content-Type :[ text/html ], Date :[ Tue, 11 Oct 2016 19:54:46 GMT ], Etag :[ \\ 359670651+gzip\\ ], Expires :[ Tue, 18 Oct 2016 19:54:46 GMT ], Last-Modified :[ Fri, 09 Aug 2013 23:54:35 GMT ], Server :[ ECS (mdw/1275) ], Vary :[ Accept-Encoding ], X-Cache :[ HIT ], X-Ec-Custom-Error :[ 1 ]}, raw-body : PCFkb2N0eXBlIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDx0aXRsZT5FeGFtcGxlIERvbWFpbjwvdGl0bGU+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIgLz4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSIgLz4KICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICBib2R5IHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYyOwogICAgICAgIG1hcmdpbjogMDsKICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgIGZvbnQtZmFtaWx5OiAiT3BlbiBTYW5zIiwgIkhlbHZldGljYSBOZXVlIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAgICAgICAKICAgIH0KICAgIGRpdiB7CiAgICAgICAgd2lkdGg6IDYwMHB4OwogICAgICAgIG1hcmdpbjogNWVtIGF1dG87CiAgICAgICAgcGFkZGluZzogNTBweDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDFlbTsKICAgIH0KICAgIGE6bGluaywgYTp2aXNpdGVkIHsKICAgICAgICBjb2xvcjogIzM4NDg4ZjsKICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICB9CiAgICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHsKICAgICAgICBib2R5IHsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgICAgICB9CiAgICAgICAgZGl2IHsKICAgICAgICAgICAgd2lkdGg6IGF1dG87CiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwOwogICAgICAgICAgICBwYWRkaW5nOiAxZW07CiAgICAgICAgfQogICAgfQogICAgPC9zdHlsZT4gICAgCjwvaGVhZD4KCjxib2R5Pgo8ZGl2PgogICAgPGgxPkV4YW1wbGUgRG9tYWluPC9oMT4KICAgIDxwPlRoaXMgZG9tYWluIGlzIGVzdGFibGlzaGVkIHRvIGJlIHVzZWQgZm9yIGlsbHVzdHJhdGl2ZSBleGFtcGxlcyBpbiBkb2N1bWVudHMuIFlvdSBtYXkgdXNlIHRoaXMKICAgIGRvbWFpbiBpbiBleGFtcGxlcyB3aXRob3V0IHByaW9yIGNvb3JkaW5hdGlvbiBvciBhc2tpbmcgZm9yIHBlcm1pc3Npb24uPC9wPgogICAgPHA+PGEgaHJlZj0iaHR0cDovL3d3dy5pYW5hLm9yZy9kb21haW5zL2V4YW1wbGUiPk1vcmUgaW5mb3JtYXRpb24uLi48L2E+PC9wPgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+Cg== , status-code :200}], timestamp : 2016-10-11T19:54:46.801171324Z , type : action }\n{ message : http status 200 is 2xx , pass :true, timestamp : 2016-10-11T19:54:46.801350514Z , type : check }\n{ message : has html5 doctype declaration , pass :true, timestamp : 2016-10-11T19:54:46.801379281Z , type : check }\n{ message : headers.content-type eq 'text/html' , pass :true, timestamp : 2016-10-11T19:54:46.80140328Z , type : check }\n{ duration :24145495, message : , timestamp : 2016-10-11T19:54:46.801429086Z , type : serial }\n{ duration :24171189, message : Sooper Site , timestamp : 2016-10-11T19:54:46.801461006Z , type : plan }", 
            "title": "Examples"
        }, 
        {
            "location": "/actions/shell/", 
            "text": "shell\n\n\nExecute a shell command.\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nRequired\n\n\nDefault\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nOutputs\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nExamples", 
            "title": "shell"
        }, 
        {
            "location": "/actions/shell/#shell", 
            "text": "Execute a shell command.", 
            "title": "shell"
        }, 
        {
            "location": "/actions/shell/#parameters", 
            "text": "Name  Required  Default  Description", 
            "title": "Parameters"
        }, 
        {
            "location": "/actions/shell/#outputs", 
            "text": "Name  Description", 
            "title": "Outputs"
        }, 
        {
            "location": "/actions/shell/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/contributing/", 
            "text": "Reporting an Issue\n\n\nWhen \nreporting an issue\n, please include as much \ndetail as you can think of, including:\n\n\n\n\ncrash\n version\n\n\nOperating system\n\n\nSystem architecture\n\n\nStep-by-step instructions on how to reproduce the issue\n\n\nStack traces and any other relevant output\n\n\n\n\nRuning Tests\n\n\nFrom your \nGOPATH\n:\n\n\ngo test github.com/troykinsella/crash/...", 
            "title": "Contributing"
        }, 
        {
            "location": "/contributing/#reporting-an-issue", 
            "text": "When  reporting an issue , please include as much \ndetail as you can think of, including:   crash  version  Operating system  System architecture  Step-by-step instructions on how to reproduce the issue  Stack traces and any other relevant output", 
            "title": "Reporting an Issue"
        }, 
        {
            "location": "/contributing/#runing-tests", 
            "text": "From your  GOPATH :  go test github.com/troykinsella/crash/...", 
            "title": "Runing Tests"
        }
    ]
}